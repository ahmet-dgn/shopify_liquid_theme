<link rel="stylesheet" href="https://unpkg.com/swiper@7/swiper-bundle.min.css" />
<script src="https://unpkg.com/swiper@7/swiper-bundle.min.js"></script>

{% assign selected_variant = product.selected_or_first_available_variant %}

<style>
  .swiper-button-prev,
  .swiper-button-next {
    color: black;
    top: auto;
    bottom: -2.5rem !important;
    height: 15px;
  }
  .swiper-button-prev::after,
  .swiper-button-next::after {
    font-size: 10px;
  }
  .swiper-pagination {
    color: black;
    bottom: -2.5rem !important;
    font-size: 10px;
  }
  .swiper-pagination-bullet-active {
    background: black !important;
  }
  .swiper-button-prev,
  .swiper-rtl .swiper-button-next {
    left: 35% !important;
  }
  .swiper-button-prev,
  .swiper-button-next {
    right: 35% !important;
  }
  .product--information {
    height: fit-content;
  }

</style>

<div class="max-w-[85rem] mx-auto my-8 ">
  <div class="grid grid-cols-1 md:grid-cols-2 gap-3">
    <div class="product--medias">
      <div class="hidden md:block">
        {% for media in product.media %}
          <div class="h-100 overflow-hidden p-2 ">
            {% render 'product-media'
              , media: media %}
          </div>
        {% endfor %}
      </div>
      <div class="md:hidden relative">
        <div class="swiper ">
          <div class="swiper-wrapper">
            {% for media in product.media %}
              <div class="swiper-slide">
                <div class="w-full aspect-square overflow-hidden">
                  {% render 'product-media'
                    , media: media %}
                </div>
              </div>
            {% endfor %}
          </div>
        </div>
        <div class="swiper-pagination "></div>
        <div class="swiper-button-prev"></div>
        <div class="swiper-button-next"></div>
      </div>
    </div>

    <div class="product--information px-4 py-14 sm:px-6 lg:px-8 md:py-0 sticky top-5">
      {% form 'product'
        , product
        , id: 'product-form'
        , novalidate: 'novalidate' %}
        <input
          type="hidden"
          name="id"
          value="{{ selected_variant.id }}">

        {% for block in section.blocks %}
          {% case block.type %}
            {% when 'vendor' %}
              <span class="text-xs text-gray-500 block ">{{ product.vendor }}</span>
            {% when 'title' %}
              <h1 class="text-2xl md:text-4xl text-gray-900 font-bold my-4">
                {{ product.title }}</h1>
            {% when 'price' %}
              <div class="flex items-center flex-wrap  my-8" id="price-{{ section.id }}">
                {% if selected_variant.price < selected_variant.compare_at_price %}
                  <span class="text-base text-gray-500 line-through inline-flex mr-3">
                    {{ selected_variant.compare_at_price | money }}</span>
                {% endif %}
                <span class="text-xl text-gray-900 font-medium inline-flex mr-3">
                  {{ selected_variant.price | money }}</span>
                {% if selected_variant.price < selected_variant.compare_at_price %}
                  <span class="inline-flex items-center gap-x-1.5 py-1.5 px-3 rounded-full text-xs font-medium bg-red-100 text-red-800 ">Sale</span>
                {% endif %}
              </div>

            {% when 'variant_selector' %}
              <div class="my-4">
                {% unless product.has_only_default_variant %}
                  <variant-selector data-url="{{ product.url}}" data-section="{{ section.id }}">
                    {% for option in product.options_with_values %}
                      <div class="my-4">
                        <label for="Option-{{ section.id }}-{{ forloop.index0 }}" class="block text-sm font-medium mb-2 ">{{ option.name }}</label>
                        <select
                          name="options[{{ option.name | escape }}]"
                          id="Option-{{ section.id }}-{{ forloop.index0 }}"
                          class="py-3 px-4 pe-9 block border border-gray-200 rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none w-full">
                          {% for value in option.values %}
                            <option
                              value="{{ value | escape }}"
                              {% if option.selected_value == value %}
                              selected="selected"
                              {% endif %}>
                              {{ value }}
                            </option>
                          {% endfor %}
                        </select>
                      </div>

                      <script type="application/json">
                        {{ product.variants | json }}
                      </script>
                    {% endfor %}
                  </variant-selector>
                {% endunless %}
              </div>

            {% when 'quantity' %}
              <div class="my-4">
                <label for="Quantity-{{ section.id }}" class="block text-sm font-medium mb-2 ">Quantity</label>
                <input
                  type="number"
                  name="quantity"
                  id="Quantity-{{ section.id }}"
                  value="1"
                  min="1"
                  class="py-3 px-4 block border-gray-200 rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none ">
              </div>

            {% when 'checkout_buttons' %}
              <div class="my-4">
                <button
                  type="submit"
                  name="add"
                  class="py-3 px-4 inline-flex items-center gap-x-2 text-sm font-semibold rounded-lg border border-transparent bg-blue-600 text-white hover:bg-blue-700 disabled:bg-gray-900 disabled:pointer-events-none w-36 justify-center w-full"
                  {% if selected_variant.available == false %}
                  disabled
                  {% endif %}>
                  {% if selected_variant.available == false %}
                    Sold out
                  {% else %}
                    Add to cart
                  {% endif %}
                </button>
              </div>

            {% when 'description' %}
              <p class="text-gray-700 my-10">{{ product.description }}</p>
              {% else %}
          {% endcase %}
        {% endfor %}

      {% endform %}
    </div>
  </div>
</div>
<script>
    class VariantSelector extends HTMLElement {
        constructor() {
            super();
            this.addEventListener("change", this.onVariantChange);
        }

        onVariantChange() {
            this.getSelectedOptions();
            this.getSelectedVariant();

            if(this.currentVariant) {
                this.updateURL();
                this.updateFormID();
                this.updatePrice();
            }
        }

        getSelectedOptions() {
            this.options = Array.from(this.querySelectorAll('select'), (select) => select.value);
            console.log(this.options);
        }

        getVariantJSON() {
            this.variantData = this.variantData || JSON.parse(this.querySelector('[type="application/json"]').textContent);
            return this.variantData;
        }

        getSelectedVariant() {
            this.currentVariant = this.getVariantJSON().find(
                (variant) => {
                    const findings = !variant.options.map(
                        (option, index) => {
                            return this.options[index] === option;
                        }
                    ).includes(false);

                    if(findings) return variant;
                }
            );

            console.log(this.currentVariant);
        }

        updateURL() {
            if(!this.currentVariant) return;
            window.history.replaceState({}, '', `${this.dataset.url}?variant=${this.currentVariant.id}`);
        }

        updateFormID() {
            const form_input = document.querySelector("#product-form").querySelector('input[name="id"]');
            form_input.value = this.currentVariant.id;
        }

        updatePrice() {
            fetch(`${this.dataset.url}?variant=${this.currentVariant.id}&section_id=${this.dataset.section}`)
            .then((response) => response.text())
            .then((responseText) => {
                const id = `price-${this.dataset.section}`;
                const html = new DOMParser().parseFromString(responseText, 'text/html');

                const oldPrice = document.getElementById(id);
                const newPrice = html.getElementById(id);

                if(oldPrice && newPrice) oldPrice.innerHTML = newPrice.innerHTML;
            });
        }
    }

    customElements.define("variant-selector", VariantSelector);
</script>


<script>
            const swiper = new Swiper('.swiper', {
          direction: 'horizontal',
          loop: true,
          pagination: {
              el: '.swiper-pagination',
               type: "fraction",
          },
          navigation: {
              prevEl: '.swiper-button-prev',
              nextEl: '.swiper-button-next'
          }
            })
</script>

{% schema %}
  {
    "name": "Product",
    "blocks": [
      {
        "type": "vendor",
        "name": "Vendor",
        "limit": 1
      },
      {
        "type": "title",
        "name": "Title",
        "limit": 1
      },
      {
        "type": "price",
        "name": "Price",
        "limit": 1
      },
      {
        "type": "variant_selector",
        "name": "Variant Selector",
        "limit": 1
      }, {
        "type": "quantity",
        "name": "Quantity",
        "limit": 1
      }, {
        "type": "description",
        "name": "Description",
        "limit": 1
      }, {
        "type": "checkout_buttons",
        "name": "Checkout Butons",
        "limit": 1
      }
    ]
  }
{% endschema %}